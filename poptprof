#!/bin/bash

# script to profile CPU usage of COPASI's parallel optimization
# make sure that the .cps files passed on to this script are set
# executable for parameter estimation or optimization and that the
# correct optimization algorithm is selected
#
# depends on audria package https://github.com/scaidermern/audria

# PARAMETERS (edit as needed)

# the executable with serial algorithm
OPTSER=/usr/bin/CopasiSE

# the executable with parallel algorithm
OPTPAR=/usr/local/COPASI-DEVEL/bin/CopasiSE

# COPASI options
CLOPT="--nologo"

# default number of iterations
RUNITER=20

# default number of threads
THREADS=4

#DON'T EDIT BELOW THIS LINE

# check that audria is available
if ! command -v audria &> /dev/null
then
  printf "abort: this script needs the command 'audria', please install\n"
  exit 1
fi

# check command line options
if [[ $# -ge 1 ]]; then
  INFILE=$1
  if [[ "$1" =~ ^-h$ ]]; then
   printf "usage: poptprof infile [iterations [threads [outfile]]]\n"
   exit 0
  fi
else
  printf "usage: poptprof infile [iterations [threads [outfile]]]\n"
  exit 1
fi

if [[ $# -ge 2 ]]; then
  if [[ "$2" =~ ^[0-9]+$ ]]; then
    RUNITER=$2
  else
    printf "usage: poptprof infile [iterations [threads [outfile]]]\n"
    printf "error: iterations must be an integer"
    exit 1
  fi
fi

if [[ $# -ge 3 ]]; then
  if [[ "$3" =~ ^[0-9]+$ ]]; then
    THREADS=$3
  else
    printf "usage: poptprof infile [iterations [threads [outfile]]]\n"
    printf "error: threads must be an integer\n"
    exit 1
  fi
fi

if [[ $# -ge 4 ]]; then
  OUTFILE=$4
else
  OUTFILE="profile.csv"
fi

# OMP directives,number of threads to be used, etc
export OMP_THREAD_LIMIT=$THREADS
export OMP_NUM_THREADS=$OMP_THREAD_LIMIT
export OMP_SCHEDULE=guided

printf "started on "
date

# keep a backup of OUTFILE if it exists
if [[ -e $OUTFILE ]]; then
  mv $OUTFILE $OUTFILE.bak
fi

#write a header
printf "# " >> $OUTFILE
date >> $OUTFILE
printf "# " >> $OUTFILE
printf '%s ' "$0 $@" >> $OUTFILE
printf "\n# " >> $OUTFILE
grep -m 1  "model name" /proc/cpuinfo >> $OUTFILE
printf "# " >> $OUTFILE
grep -m 1  "cpu cores" /proc/cpuinfo >> $OUTFILE
printf '# threads used\t: %s\n' "$OMP_THREAD_LIMIT" >> $OUTFILE

# run the profiling (the "!" is used to make sure script doesn't abort)
printf '%s\n' "running parallel PS $RUNITER times with $THREADS threads"
for ((i=1;i<=$RUNITER;i++));
do
#   printf "# " >> $OUTFILE
   printf '%s ' "$i"
   ! audria -d 0.1 -o $OUTFILE -e $OPTPAR $CLOPT $INFILE 2>&1 > /dev/null
   printf "\n" >> $OUTFILE
done

printf "ended on "
date
